clc
clear
Y = [607, 583, 521, 494, 369, 782, 570, 678, 467, 620, 425, 395,...
    346, 361, 310, 300, 382, 294, 315, 323, 421, 339, 398, 328, 335,...
    291, 329, 310, 294, 321, 286, 349, 279, 268, 293, 310, 259, 241,...
    243, 272, 247, 275, 220, 245, 268, 357, 273, 301, 322, 276, 401,...
    368, 149, 507, 411, 362, 358, 355, 362, 324, 332, 268, 259, 274,...
    248, 254, 242, 286, 276, 237, 259, 251, 239, 247, 260, 237, 206,...
    242, 361, 267, 245, 331, 357, 284, 263, 244, 317, 225, 254, 253,...
    251, 314, 239, 248, 250, 200, 256, 233, 427, 391, 331, 395, 337,...
    392, 352, 381, 330, 368, 381, 316, 335, 316, 302, 375, 361, 330,...
    351, 186, 221, 278, 244, 218, 126, 269, 238, 194, 384, 154, 555,...
    387, 317, 365, 357, 390, 320, 316, 297, 354, 266, 279, 327, 285,...
    258, 267, 226, 237, 264, 510, 490, 458, 425, 522, 927, 555, 550,...
    516, 548, 560, 545, 633, 496, 498, 223, 222, 309, 244, 207, 258,...
    255, 281, 258, 226, 257, 263, 266, 238, 249, 340, 247, 216, 241,...
    239, 226, 273, 235, 251, 290, 473, 416, 451, 475, 406, 349, 401,...
    334, 446, 401, 252, 266, 210, 228, 250, 265, 236, 289, 244, 327,...
    274, 223, 327, 307, 338, 345, 381, 369, 445, 296, 303, 326, 321,...
    309, 307, 319, 288, 299, 284, 278, 310, 282, 275, 372, 295, 306,...
    303, 285, 316, 294, 284, 324, 264, 278, 369, 254, 306, 237, 439,...
    287, 285, 261, 299, 311, 265, 292, 282, 271, 268, 270, 259, 269,...
    249, 261, 425, 291, 291, 441, 222, 347, 244, 232, 272, 264, 190,...
    219, 317, 232, 256, 185, 210, 213, 202, 226, 250, 238, 252, 233,...
    221, 220, 287, 267, 264, 273, 304, 294, 236, 200, 219, 276, 287,...
    365, 438, 420, 396, 359, 405, 397, 383, 360, 387, 429, 358, 459,...
    371, 368, 452, 358, 371];
ind = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5, 5,...
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6,...
    7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10,...
    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11,...
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12,...
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,...
    12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14,...
    14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16,...
    16, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 20,...
    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,...
    20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22,...
    22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,...
    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,...
    24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26,...
    26, 26, 26, 26, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28,...
    28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30,...
    31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 33, 34, 34, 34, 34, 34, 34,...
    34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34];
child = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,...
    0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0];
attempt = [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 1,...
    2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 6,...
    7, 8, 9, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5,...
    6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 4, 5, 6, 7,...
    8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7,...
    8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7,...
    8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 2, 3, 4, 5, 6,...
    1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4,...
    5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4,...
    5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,...
    5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,...
    16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 2,...
    3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6,...
    7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 1, 2,...
    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];
zy = log(Y); %log of time data for numerical stability
n = length(unique(ind)); %calculating number of individuals
ind_mean = zeros(1,n);
for i = 1:n
    ind_mean(i) = mean(zy(ind==i)); %calculating individuals' means
end
x0 = rand(2*ind(end)+7,1);
logpdf = @(x)logpost7(x,zy,ind,child,attempt); %function for posterior calculation
N = 50000; % no of samples
%using built-in slicesampler for MCMC sample generation 
samples = slicesample(x0,N,'logpdf',logpdf,'width',0.5,'thin',100,'burnin',1000); 
%getting desired variables from posterior samples
sigma   = samples(:,1);
mu_0    = samples(:,2);
tau_0   = samples(:,3);
phi_0   = samples(:,4);
mu_1    = samples(:,5);
tau_1   = samples(:,6);
phi_1   = samples(:,7);
theta   = samples(:,8:end);
theta_0 = theta(:,1:34);
theta_1 = theta(:,35:end);
%getting data for individual 1,3 and 4 for 1st and 5th attempt
Oliver_learning_rate = exp(theta_1(:,1)); 
Jesper_learning_rate = exp(theta_1(:,3)); 
Dude_learning_rate = exp(theta_1(:,4)); 
Oliver_att1 = exp(theta_0(:,1) + theta_1(:,1).*(1)+sigma.^2/2); %individual 1, attempt 1
Oliver_att5 = exp(theta_0(:,1) + theta_1(:,1).*(5)+sigma.^2/2); %individual 1, attempt 5
Jesper_att1 = exp(theta_0(:,3) + theta_1(:,3).*(1)+sigma.^2/2); %individual 3, attempt 1
Jesper_att5 = exp(theta_0(:,3) + theta_1(:,3).*(5)+sigma.^2/2); %individual 3, attempt 5
Dude_att1 = exp(theta_0(:,4) + theta_1(:,4).*(1)+sigma.^2/2); %individual 4, attempt 1
Dude_att5 = exp(theta_0(:,4) + theta_1(:,4)*5 + sigma.^2/2); %individual 4, attempt 5
%plotting theta1 for individual 1,3 and 4.
figure; 
subplot(1,3,1); plot_learning_rate(Oliver_learning_rate); title('Oliver Learning Rate'); xlabel('exp(\theta_1[1])');
subplot(1,3,2); plot_learning_rate(Jesper_learning_rate); title('Jesper Learning Rate'); xlabel('exp(\theta_1[3])');
subplot(1,3,3); plot_learning_rate(Dude_learning_rate); title('Dude Learning Rate'); xlabel('exp(\theta_1[4])');
%plotting reaction time for 1st and 5th attempt of individual 1
figure; 
subplot(1,2,1); plot_attempt_1(Oliver_att1); title('Oliver 1st attempt'); xlabel('exp(\theta_0[1]+\theta_1[1](1)+\sigma^2/2)');
subplot(1,2,2); plot_attempt_5(Oliver_att5); title('Oliver 5th attempt'); xlabel('exp(\theta_0[1]+\theta_1[1](5)+\sigma^2/2)');
%plotting reaction time for 1st and 5th attempt of individual 3
figure; 
subplot(1,2,1); plot_attempt_1(Jesper_att1); title('Jesper 1st attempt'); xlabel('exp(\theta_0[1]+\theta_1[1](1)+\sigma^2/2)');
subplot(1,2,2); plot_attempt_5(Jesper_att5); title('Jesper 5th attempt'); xlabel('exp(\theta_0[1]+\theta_1[1](5)+\sigma^2/2)');
%plotting reaction time for 1st and 5th attempt of individual 4
figure; 
subplot(1,2,1); plot_attempt_1(Dude_att1); title('Dude 1st attempt'); xlabel('exp(\theta_0[1]+\theta_1[1](1)+\sigma^2/2)');
subplot(1,2,2); plot_attempt_5(Dude_att5); title('Dude 5th attempt'); xlabel('exp(\theta_0[1]+\theta_1[1](5)+\sigma^2/2)');

%used functions (logpost7, HDI, plot_attempt_1, plot_attempt_5, %plot_learning_rate) available on GitHub

